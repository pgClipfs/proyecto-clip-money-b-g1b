{"version":3,"sources":["./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/resetpassword/resetpassword.component.ts","./src/app/components/resetpassword/resetpassword.component.html","./src/app/components/myaccount/myaccount.component.ts","./src/app/components/myaccount/myaccount.component.html","./src/app/services/usuario-login.service.ts","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/main/main.component.ts","./src/app/components/main/main.component.html","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/secretanswer/secretanswer.component.ts","./src/app/components/secretanswer/secretanswer.component.html","./src/app/app.module.ts","./src/app/components/singup/confirmed.validator.component.ts","./src/app/components/singup/singup.component.ts","./src/app/components/singup/singup.component.html","./src/app/models/usuario/usuario.module.ts","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/models/modificar-usuario/modificar-usuario.module.ts","./src/app/models/login-usuario/login-usuario.module.ts","./src/app/services/auth.service.ts","./src/app/services/usuario.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  title = 'Billetera Virtual' ;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h1>{{title}}</h1>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { LoginUsuarioModule } from 'src/app/models/login-usuario/login-usuario.module';\r\nimport { UsuarioLoginService } from 'src/app/services/usuario-login.service';\r\n\r\n@Component({\r\n  selector: 'app-resetpassword',\r\n  templateUrl: './resetpassword.component.html',\r\n  styleUrls: ['../../app.component.css']\r\n})\r\nexport class ResetpasswordComponent implements OnInit {\r\n\r\n  public login: LoginUsuarioModule[];\r\n\r\n  selectedLogin: LoginUsuarioModule = new LoginUsuarioModule();\r\n\r\n  form: FormGroup = new FormGroup({});\r\n\r\n  constructor(private router: Router, private usuarioLoginService: UsuarioLoginService, private fb: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.form = this.fb.group({\r\n      email: ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  get f() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  public onSubmit(login: LoginUsuarioModule) {\r\n    if (this.form.invalid) {\r\n      return;\r\n    }else{\r\n      console.log(login);\r\n      this.usuarioLoginService.allowPasswordChange(login).subscribe( data => {\r\n        console.log(data);\r\n      });\r\n      /*\r\n      if (data){\r\n        this.router.navigateByUrl('/secretanswer');\r\n      }else{\r\n        alert(\"El correo suministrado no existe en el registro...\")\r\n      }*/\r\n    }\r\n    return this.selectedLogin;\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"segment\">\r\n        <div class=\"register-img\">\r\n            <img class=\"logo\" src=\"https://www.flaticon.es/svg/static/icons/svg/2506/2506463.svg\" alt=\"logo Bitcoin\" />\r\n            <h1 class=\"page-title\">¿Olvidaste tu Contraseña?</h1>\r\n        </div>\r\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit(selectedLogin)\" id=\"resetpassword-form\" class=\"form\">\r\n            <p class=\"text-form \">Ingresá el email asociado a tu cuenta</p>\r\n            <input formControlName=\"email\" id=\"email\" type=\"email\" [(ngModel)]=\"selectedLogin.email\"\r\n                class=\"form-control\" placeholder=\"Email\" ngModel email=\"true\" required>\r\n            <div *ngIf=\"f.email.touched && f.email.invalid\" class=\"alert alert-danger\">\r\n                <div *ngIf=\"f.email.errors.required\" class=\"error\">El Email es requerido</div>\r\n                <div *ngIf=\"f.email.invalid\" class=\"error\">Debe tener formato de Email</div>\r\n            </div>\r\n            <button class=\"btn btn-primary mt-3 mb-3\" type=\"submit\" [disabled]=\"!form.valid\">Recuperar\r\n                Contraseña</button>\r\n        </form>\r\n    </div>\r\n</div>","import { ModificarUsuarioModule } from '../../models/modificar-usuario/modificar-usuario.module';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UsuarioService } from 'src/app/services/usuario.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-myaccount',\r\n  templateUrl: './myaccount.component.html',\r\n  styleUrls: ['../../app.component.css']\r\n})\r\nexport class MyaccountComponent implements OnInit {\r\n  public usuarios: ModificarUsuarioModule[]\r\n  selectedUsuario: ModificarUsuarioModule = new ModificarUsuarioModule();\r\n\r\n  constructor(private usuarioService: UsuarioService, private route: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    let id = parseInt(localStorage.getItem('id'));\r\n  }\r\n\r\n  public onSubmit(usuario: ModificarUsuarioModule) {\r\n    usuario.id = parseInt(localStorage.getItem('id'));\r\n    if (usuario.id) {\r\n      console.log(usuario.id);\r\n      this.usuarioService.onUpdateUsuario(usuario).subscribe(resp => {\r\n        this.usuarios.push(resp);\r\n        console.log(resp)\r\n      })\r\n    }\r\n    console.log(this.selectedUsuario);\r\n    this.selectedUsuario = new ModificarUsuarioModule();\r\n    console.log(this.selectedUsuario.fechaNacimiento);\r\n    alert('Datos completados correctamente');\r\n    this.route.navigateByUrl('');\r\n    return this.selectedUsuario;\r\n  }\r\n  \r\n}","<div class=\"container\">\r\n  <h1 class=\"page-title\">Completá tus datos</h1>\r\n  <form id=\"register-form-myaccount\" class=\"form\">\r\n    <div class=\"form-myaccount\">\r\n      <div class=\"segment-myaccount\">\r\n        <div class=\"form-group\">\r\n          <input type=\"text\" [(ngModel)]=\"selectedUsuario.nombre\" name=\"Nombre\" placeholder=\"Nombre\"\r\n            class=\"form-control\" required>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <input type=\"text\" [(ngModel)]=\"selectedUsuario.apellido\" name=\"Apellido\" placeholder=\"Apellido\"\r\n            class=\"form-control\" required>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <input type=\"text\" [(ngModel)]=\"selectedUsuario.dni\" name=\"Dni\" placeholder=\"Nº DNI\" maxlength=\"8\"\r\n            class=\"form-control\" pattern=\"[0-9]\" required>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"frente-dni\"> Subir una foto del frente de su D.N.I.</label>\r\n          <input type=\"file\" id=\"frontdni\" class=\"form-control\"  placeholder=\" \" name=\"frentedni\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n          <label for=\"dorso-dni\"> Subir una foto del dorso de su D.N.I.</label>\r\n          <input type=\"file\" id=\"backdni\" class=\"form-control\"  placeholder=\" \" name=\"dosrsodni\" required>\r\n      </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"frente-dni\">Selecciona el género con el que te identificas</label>\r\n          <div class=\"form-check\">\r\n            <input class=\"form-check-input\" type=\"radio\" [(ngModel)]=\"selectedUsuario.genero\" name=\"gender\" id=\"female\"\r\n              value=\"female\" />\r\n            <label class=\"form-check-label\" for=\"female\">\r\n              Femenino\r\n            </label>\r\n          </div>\r\n          <div class=\"form-check\">\r\n            <input class=\"form-check-input\" type=\"radio\" [(ngModel)]=\"selectedUsuario.genero\" name=\"gender\" id=\"male\"\r\n              value=\"male\">\r\n            <label class=\"form-check-label\" for=\"male\">\r\n              Masculino\r\n            </label>\r\n          </div>\r\n          <div class=\"form-check\">\r\n            <input class=\"form-check-input\" type=\"radio\" [(ngModel)]=\"selectedUsuario.genero\" name=\"gender\" id=\"others\"\r\n              value=\"others\">\r\n            <label class=\"form-check-label\" for=\"others\">\r\n              Otro\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <input type=\"date\" [(ngModel)]=\"selectedUsuario.fechaNacimiento\" name=\"fechaNacimiento\"\r\n            placeholder=\"Fecha de Nacimiento\" class=\"form-control\" required>\r\n        </div>\r\n\r\n      </div>\r\n      <div class=\"segment-myaccount\">\r\n        <div class=\"form-group\">\r\n          <input type=\"text\" [(ngModel)]=\"selectedUsuario.cuil_cuit\" name=\"Cuil_Cuit\" placeholder=\"Cuil-Cuit\"\r\n            maxlength=\"11\" class=\"form-control\" required>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <input type=\"text\" [(ngModel)]=\"selectedUsuario.calle\" name=\"calle\" placeholder=\"Calle\" class=\"form-control\"\r\n            required>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <input type=\"text\" [(ngModel)]=\"selectedUsuario.numero_de_calle\" name=\"numero_de_calle\"\r\n            placeholder=\"Numero de Calle\" class=\"form-control\" required>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <input type=\"text\" [(ngModel)]=\"selectedUsuario.barrio\" name=\"barrio\" placeholder=\"Barrio\"\r\n            class=\"form-control\" required>\r\n        </div>\r\n        \r\n          <div class=\"form-group\">\r\n            <input type=\"text\" [(ngModel)]=\"selectedUsuario.codigo_postal\" name=\"codigo_postal\"\r\n              placeholder=\"Codigo Postal\" class=\"form-control\" required>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <input type=\"text\" [(ngModel)]=\"selectedUsuario.ciudad\" name=\"ciudad\" placeholder=\"Ciudad\"\r\n              class=\"form-control\" required>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <input type=\"text\" name=\"telefono\"\r\n              placeholder=\"Numero de telefono\" class=\"form-control\" required>\r\n          </div>\r\n               <div class=\"form-group\">\r\n                   <label>Ingresa el nombre su ciudad natal</label>\r\n                    <input type=\"text\" id=\"secretanswer\" name=\"ingresa la respuesta secreta\" placeholder=\"pregunta secreta\" class=\"form-control\" required>\r\n                </div>\r\n        <div class=\"form-group\">\r\n          <button class=\"btn btn-primary mt-3\" (click)=\"onSubmit(selectedUsuario)\">Enviar</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginUsuarioModule } from '../models/login-usuario/login-usuario.module';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsuarioLoginService {\r\n  url=\"https://localhost:44300/api/usuarioLogin\";\r\n\r\n  constructor(private http:HttpClient) { \r\n    console.log(\"UsuarioLogin service is running\");\r\n  }\r\n\r\n  getIdUsuario(login: LoginUsuarioModule): Observable<LoginUsuarioModule>{\r\n    let header = new HttpHeaders().set('Content-Type','application/json');\r\n    return this.http.post<LoginUsuarioModule>(this.url, login);\r\n  }\r\n\r\n  allowPasswordChange(login: LoginUsuarioModule): Observable<LoginUsuarioModule>{\r\n    let header = new HttpHeaders().set('Content-Type', 'application/json');\r\n    return this.http.get<LoginUsuarioModule>(this.url);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['../../app.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  Image = '/assets/images/phone.png';\r\n\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <h1 class=\"page-title text-center\">Bienvenidos </h1>\r\n    <div class=\"container text-center\">\r\n        <!-- <img src=\"https://i.ibb.co/Zfc38mb/phone.png\" alt=\"imagen de bienvenida\" class=\"welcome img-fluid\" /> -->\r\n        <img src=\"https://github.com/pgClipfs/proyecto-clip-money-b-g1b/blob/Felisa-tareas/billeterafront/src/assets/images/phone.png?raw=true\" alt=\"imagen de bienvenida\" class=\"welcome img-fluid\" />\r\n\r\n    </div>\r\n\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['../../app.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>main works!</p>\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n  text = 'Clip';\r\n\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>{{text}}</p>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'billeterafront';\r\n}\r\n","<app-navbar></app-navbar>\r\n<router-outlet></router-outlet>","import { AuthService } from './../../services/auth.service';\r\nimport { UsuarioLoginService } from '../../services/usuario-login.service';\r\nimport { LoginUsuarioModule } from '../../models/login-usuario/login-usuario.module';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['../../app.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  public login: LoginUsuarioModule[];\r\n\r\n  selectedLogin: LoginUsuarioModule = new LoginUsuarioModule();\r\n\r\n  form: FormGroup = new FormGroup({});\r\n\r\n  constructor(private authService: AuthService, private router: Router, private usuarioLoginService: UsuarioLoginService, private fb: FormBuilder) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('login');\r\n    localStorage.removeItem('id');\r\n\r\n    this.form = this.fb.group({\r\n      email: ['', [Validators.required]],\r\n      password: ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  get f() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  public onSubmit(login: LoginUsuarioModule) {\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n    else {\r\n      this.authService.getToken(login).subscribe(resp => {\r\n        localStorage.setItem('token', resp);\r\n        localStorage.setItem('login', JSON.stringify(login));\r\n        this.router.navigateByUrl('/micuenta');\r\n        console.log(resp);\r\n      },\r\n        err => {\r\n          if (err.status == 401) alert(\"Compruebe su email o contraseña...\")\r\n        });\r\n    }\r\n    //console.log(\"Selected Login\", this.selectedLogin);\r\n    this.usuarioLoginService.getIdUsuario(login).subscribe(data => {\r\n      let list = [];\r\n      list = Object.values(data);\r\n      localStorage.setItem('id', list[0]);\r\n    });\r\n\r\n    return this.selectedLogin;\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"segment\">\r\n        <div class=\"register-img\">\r\n            <img class=\"logo\" src=\"https://www.flaticon.es/svg/static/icons/svg/2506/2506463.svg\"\r\n                alt=\"Billetera virtual\" />\r\n            <h1 class=\"page-title\">Hola de nuevo!</h1>\r\n        </div>\r\n\r\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit(selectedLogin)\" id=\"login-form\" class=\"form\" #formulario=\"ngForm\">\r\n\r\n            <input formControlName=\"email\" id=\"email\" type=\"email\" [(ngModel)]=\"selectedLogin.email\"\r\n                class=\"form-control\" placeholder=\"Email\" ngModel email=\"true\" required>\r\n            <div *ngIf=\"f.email.touched && f.email.invalid\" class=\"alert alert-danger\">\r\n                <div *ngIf=\"f.email.errors.required\" class=\"error\">El Email es requerido</div>\r\n                <div *ngIf=\"f.email.invalid\" class=\"error\">Debe tener formato de Email</div>\r\n            </div>\r\n\r\n            <div class=\"form-group \">\r\n                <input formControlName=\"password\" id=\"password\" type=\"password\" [(ngModel)]=\"selectedLogin.password\"\r\n                    class=\"form-control\" placeholder=\"Password\">\r\n                <div *ngIf=\"f.password.touched && f.password.invalid\" class=\"alert alert-danger\">\r\n                    <div *ngIf=\"f.password.errors.required\" class=\"error\">Se requiere una contraseña.</div>\r\n                </div>\r\n            </div>\r\n\r\n            <button class=\"btn btn-primary mt-3 mb-3\" type=\"submit\" [disabled]=\"!form.valid\">\r\n                Ingresar\r\n            </button>\r\n\r\n            <a href=\"/resetpassword\">\r\n                <p class=\"link-text\">¿Olvidaste tu contraseña?</p>\r\n            </a>\r\n\r\n            <div class=\"actions\">\r\n                <p class=\"text\">No tenés una cuenta?</p><a href=\"/registrarse\" class=\"link-text\">Registrate</a>\r\n            </div>\r\n\r\n        </form>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-secretanswer',\r\n  templateUrl: './secretanswer.component.html',\r\n  styleUrls: ['./secretanswer.component.css']\r\n})\r\nexport class SecretanswerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>secretanswer works!</p>\r\n","import { HttpClient, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { UsuarioService } from './services/usuario.service';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { SingupComponent } from './components/singup/singup.component';\r\nimport { MyaccountComponent } from './components/myaccount/myaccount.component';\r\nimport { ResetpasswordComponent } from './components/resetpassword/resetpassword.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SecretanswerComponent } from './components/secretanswer/secretanswer.component';\r\nimport { UsuarioLoginService } from './services/usuario-login.service';\nimport { MainComponent } from './components/main/main.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    FooterComponent,\r\n    HeaderComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    NavbarComponent,\r\n    SingupComponent,\r\n    MyaccountComponent,\r\n    ResetpasswordComponent,\r\n    SecretanswerComponent,\r\n    MainComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n  ],\r\n  providers: [UsuarioService, UsuarioLoginService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { FormGroup } from '@angular/forms';\r\n\r\nexport function ConfirmedValidator(controlName: string, matchingControlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n        if (matchingControl.errors && !matchingControl.errors.confirmedValidator) {\r\n            return;\r\n        }\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ confirmedValidator: true });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n    }\r\n}\r\n","import { Router } from '@angular/router';\r\nimport { UsuarioService } from './../../services/usuario.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { UsuarioModule } from '../../models/usuario/usuario.module';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ConfirmedValidator } from './confirmed.validator.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-singup',\r\n  templateUrl: './singup.component.html',\r\n  styleUrls: ['../../app.component.css']\r\n})\r\nexport class SingupComponent implements OnInit {\r\n  public usuarios: UsuarioModule[]\r\n  selectedUsuario: UsuarioModule = new UsuarioModule();\r\n  form: FormGroup = new FormGroup({});\r\n\r\n  constructor(private usuarioService: UsuarioService, private route: Router, private fb: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      email: ['', [Validators.required]],\r\n      password: ['', [Validators.required]],\r\n      confirm_password: ['', [Validators.required]]\r\n    },\r\n      {\r\n        validator: ConfirmedValidator('password', 'confirm_password'),\r\n\r\n      })\r\n  }\r\n  get f() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  public onSubmit(usuario: UsuarioModule) {\r\n    if (usuario.id == 0) {\r\n      this.usuarioService.onCreateUsuario(usuario).subscribe(resp => {\r\n        this.usuarios.push(resp);\r\n        console.log(resp);\r\n      })\r\n    }\r\n    else {\r\n      this.usuarioService.onUpdateUsuario(usuario).subscribe(resp => {\r\n\r\n      })\r\n    }\r\n    console.log(this.selectedUsuario);\r\n    this.selectedUsuario = new UsuarioModule();\r\n    console.log(this.selectedUsuario.id);\r\n    alert('Se creo tu cuenta correctamente');\r\n    this.route.navigateByUrl('/ingresar');\r\n  }\r\n\r\n\r\n}","<div class=\"container\">\r\n    <div class=\"segment\">\r\n        <div class=\"register-img\">\r\n            <img class=\"logo\" src=\"https://www.flaticon.es/svg/static/icons/svg/2506/2506463.svg\"\r\n                alt=\"Billetera virtual\" />\r\n            <h1 class=\"page-title\">Crea tu cuenta!</h1>\r\n        </div>\r\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit(selectedUsuario)\" id=\"register-form\" class=\"form\">\r\n            <div class=\"form-group \">\r\n                <input formControlName=\"email\" id=\"email\" type=\"email\" [(ngModel)]=\"selectedUsuario.email\"\r\n                    class=\"form-control\" placeholder=\"Email\" ngModel email=\"true\" required>\r\n                <div *ngIf=\"f.email.touched && f.email.invalid\" class=\"alert alert-danger\">\r\n                    <div *ngIf=\"f.email.errors.required\" class=\"error\">Email is required.</div>\r\n                    <div *ngIf=\"f.email.invalid\" class=\"error\">Format email is required.</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group \">\r\n                <input formControlName=\"password\" id=\"password\" type=\"password\" [(ngModel)]=\"selectedUsuario.password\"\r\n                    class=\"form-control\" placeholder=\"Password\">\r\n                <div *ngIf=\"f.password.touched && f.password.invalid\" class=\"alert alert-danger\">\r\n                    <div *ngIf=\"f.password.errors.required\" class=\"error\">Password is required.</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group \">\r\n                <input formControlName=\"confirm_password\" id=\"confirm_password\" type=\"password\"\r\n                    [(ngModel)]=\"selectedUsuario.confirm_password\" class=\"form-control\" placeholder=\"Repetir password\">\r\n                <div *ngIf=\"f.confirm_password.touched && f.confirm_password.invalid\" class=\"alert alert-danger\">\r\n                    <div *ngIf=\"f.confirm_password.errors.required\" class=\"error\">Password is required.</div>\r\n                    <div *ngIf=\"f.confirm_password.errors.confirmedValidator\" class=\"error\">Password and Confirm\r\n                        Password must be match.</div>\r\n                </div>\r\n            </div>\r\n\r\n            <button class=\"btn btn-primary mt-3 mb-3 \" type=\"submit\" [disabled]=\"!form.valid\">Crear Cuenta</button>\r\n            <p class=\"text\">¿Ya tienes una?</p><a href=\"/ingresar\" class=\"link-text\">Ingresar</a>\r\n        </form>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule\r\n  ]\r\n})\r\nexport class UsuarioModule { \r\n  id: number = 0;\r\n  nombre: string;\r\n  apellido: string;\r\n  dni: string;\r\n  email: string;\r\n  password: string;\r\n  confirm_password: string;\r\n  fechaNacimiento: string;\r\n  cuil_cuit: string;\r\n  estado : boolean;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css\" integrity=\"sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2\" crossorigin=\"anonymous\">\r\n<nav class=\"navbar navbar-expand-lg navbar-light  fixed-top \">\r\n    <a class=\"navbar-brand\" href=\"/\">\r\n        <img class=\"logo\" id=\"navbarlogo\" src=\"https://www.flaticon.es/svg/static/icons/svg/2506/2506463.svg\" alt=\"logo Bitcoin\" width=\"50\" height=\"50\" class=\"d-inline-block align-top\" alt=\"\" loading=\"lazy\">\r\n    </a>\r\n\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n    <div class=\"navbar-nav collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <!-- <ul class=\"list-group list-group-horizontal list-unstyled mr-auto\"> -->\r\n        <ul class=\"nav navbar-nav bg-light m-0 ml-lg-auto p-3 p-lg-0\">\r\n            <li class=\"nav-item p-2\">\r\n                <a class=\"nav-link\" href=\"/ingresar\">Ingresar</a>\r\n            </li>\r\n            <li class=\"nav-item p-2\">\r\n                <a class=\"nav-link\" href=\"/registrarse\">Registrarse</a>\r\n            </li>\r\n            <!--<li class=\"nav-item p-2\">\r\n        <a class=\"nav-link\" href=\"/micuenta\">Mi cuenta</a>\r\n      </li>-->\r\n        </ul>\r\n    </div>\r\n</nav>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule\r\n  ]\r\n})\r\nexport class ModificarUsuarioModule { \r\n  id: number;\r\n  nombre: string;\r\n  apellido: string;\r\n  email: string;\r\n  password: string;\r\n  confirm_password: string;\r\n  dni: string;\r\n  genero: string;\r\n  frente_dni: File;\r\n  dorso_dni: File;\r\n  fechaNacimiento: string;\r\n  cuil_cuit: string;\r\n  calle: string; \r\n  numero_de_calle: string;\r\n  barrio: string;\r\n  codigo_postal: number; \r\n  ciudad: string;\r\n  estado : boolean;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule\r\n  ]\r\n})\r\nexport class LoginUsuarioModule { \r\n  id: number;\r\n  email: string;\r\n  password: string;\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { LoginUsuarioModule } from '../models/login-usuario/login-usuario.module';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  url = 'https://localhost:44300/api/login/authenticate';\r\n\r\n  constructor( private http: HttpClient) {\r\n    console.log('Auth Service Running');\r\n   }\r\n\r\n   public isLogged: boolean = false;\r\n\r\n   ngOnInit(){\r\n\r\n   }\r\n\r\n   getToken(login: LoginUsuarioModule): Observable<string>{\r\n     let header = new HttpHeaders().set('Content-Type', 'aplication/json');\r\n     return this.http.post<string>(this.url, login);\r\n   }\r\n   \r\n}","import { UsuarioModule } from '../models/usuario/usuario.module';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ModificarUsuarioModule } from '../models/modificar-usuario/modificar-usuario.module';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsuarioService {\r\n  url = \"https://localhost:44300/api/usuario\"; //cambiar url //revision\r\n  list: UsuarioModule[];\r\n\r\n  constructor(private http: HttpClient) {\r\n    console.log(\"UsuarioModule service is running\");\r\n  }\r\n\r\n  getUsuarios(): Observable<UsuarioModule[]> {\r\n    let header = new HttpHeaders().set('Content-Type', 'application/json');\r\n    return this.http.get<UsuarioModule[]>(this.url);\r\n  }\r\n\r\n  onDeleteUsuario(id: number): Observable<number> {\r\n    let header = new HttpHeaders().set('Content-Type', 'application/json');\r\n    return this.http.delete<number>(this.url + \"/\" + id);\r\n  }\r\n\r\n  onCreateUsuario(usuario: UsuarioModule): Observable<UsuarioModule> {\r\n    let header = new HttpHeaders().set('Content-Type', 'application/json');\r\n    return this.http.post<UsuarioModule>(this.url, usuario);\r\n  }\r\n\r\n  onUpdateUsuario(usuario: UsuarioModule): Observable<ModificarUsuarioModule> {\r\n    let header = new HttpHeaders().set('Content-Type', 'application/json');\r\n    return this.http.put<ModificarUsuarioModule>(this.url, usuario);\r\n  }\r\n}","import { ResetpasswordComponent } from './components/resetpassword/resetpassword.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { MyaccountComponent } from './components/myaccount/myaccount.component';\r\nimport { SingupComponent } from './components/singup/singup.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SecretanswerComponent } from './components/secretanswer/secretanswer.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'ingresar', component: LoginComponent },\r\n  { path: 'registrarse', component: SingupComponent },\r\n  { path: 'micuenta', component: MyaccountComponent },\r\n  { path: 'resetpassword', component: ResetpasswordComponent },\r\n  { path: 'secretanswer', component: SecretanswerComponent},\r\n  { path: '**', redirectTo: '' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}